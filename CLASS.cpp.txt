#include <string>
#include <iostream>


template<typename T> class A{
	puclic:
		virtual void vf(){
		std::cout<< elements of array << std::endl;
		for(int a : T){
			cout << a << \n;
			}
		};
		virtual void f(){std::cout << "Af" << std::endl;};
		virtual void pvf() = 0;
};
class B: public A<T&>{
	public:
		void f(){std::cout << "Bf" << std::endl;};
		void pvf(){std::cout << "pvf" << std::endl;};
		

};

int main(){
	try{

	std::cout << absztrakt osztály lekezelés << std::endl;
	Array<int> peldany(arr, 5);
	peldany.vf();
	peldany.f();
	peladny.pvf();

	}

	catch(exception& e){
	std::cerr << "Exception: " << e.what() << std::endl;
	}

	catch(...){
	std::cerr << "exception: " << std::endl;
	}

}
